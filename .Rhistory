a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)
m = mean(df)
s = sd(df)
for(i in 1:length(b$breaks)){
pnorm()
}
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
for(i in 1:length(b$breaks)){
pnorm()
}
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
for(i in 1:length(b$breaks)){
mg[i] <- pnorm(b$breaks[i+1],mean(a),sd(a)) - pnorm(b$breaks[i],mean(a),sd(a))
e[i] <- length(a)*mg[i]
}
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
for(i in 1:length(b$breaks)){
g <- pnorm(b$breaks[i+1],mean(a),sd(a)) - pnorm(b$breaks[i],mean(a),sd(a))
mg <- union(mg, c(g))
e[i] <- length(a)*mg[i]
}
a = scan("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
for(i in 1:length(b$breaks)){
g <- pnorm(b$breaks[i+1],mean(a),sd(a)) - pnorm(b$breaks[i],mean(a),sd(a))
mg <- union(mg, c(g))
e[i] <- length(a)*mg[i]
}
a = scan("d10.txt")
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
for(i in 1:length(b$breaks)){
g <- pnorm(b$breaks[i+1],mean(a),sd(a)) - pnorm(b$breaks[i],mean(a),sd(a))
mg <- union(mg, c(g))
e[i] <- length(a)*mg[i]
}
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
for(i in 1:length(b$breaks)){
g <- pnorm(b$breaks[i+1],mean(a),sd(a)) - pnorm(b$breaks[i],mean(a),sd(a))
mg <- union(mg, c(g))
e[i] <- length(a)*mg[i]
}
a <- read.table("d10.txt", header = FALSE)
a < as.data.frame(a)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
for(i in 1:length(b$breaks)){
g <- pnorm(b$breaks[i+1],mean(a),sd(a)) - pnorm(b$breaks[i],mean(a),sd(a))
mg <- union(mg, c(g))
e[i] <- length(a)*mg[i]
}
a <- read.table("d10.txt", header = FALSE)
a < a$V1
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
for(i in 1:length(b$breaks)){
g <- pnorm(b$breaks[i+1],mean(a),sd(a)) - pnorm(b$breaks[i],mean(a),sd(a))
mg <- union(mg, c(g))
e[i] <- length(a)*mg[i]
}
a <- read.table("d10.txt", header = FALSE)
a < a$V1
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
for(i in 1:length(b$breaks)){
g <- pnorm(b$breaks[i+1],mean(a),sd(a)) - pnorm(b$breaks[i],mean(a),sd(a))
mg <- union(mg, c(g))
e[i] <- length(a)*mg[i]
}
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
for(i in 1:length(b$breaks)){
g <- pnorm(b$breaks[i+1],mean(a),sd(a)) - pnorm(b$breaks[i],mean(a),sd(a))
mg <- union(mg, c(g))
e[i] <- length(a)*mg[i]
}
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
for(i in 1:length(b$breaks)){
mg[i] <- pnorm(b$breaks[i+1],mean(a),sd(a)) - pnorm(b$breaks[i],mean(a),sd(a))
e[i] <- length(a)*mg[i]
}
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
for(i in 1:length(b$breaks)){
mg[i] <- pnorm(b$breaks[i+1],mean(df),sd(df)) - pnorm(b$breaks[i],mean(a),sd(a))
e[i] <- length(a)*mg[i]
}
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
for(i in 1:length(b$breaks)){
mg[i] <- pnorm(b$breaks[i+1],mean(df),sd(df)) - pnorm(b$breaks[i],mean(df),sd(df))
e[i] <- length(a)*mg[i]
}
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
mg <- NULL
for(i in 1:length(b$breaks)){
mg[i] <- pnorm(b$breaks[i+1],mean(df),sd(df)) - pnorm(b$breaks[i],mean(df),sd(df))
e[i] <- length(a)*mg[i]
}
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
mg <- NULL
e<-NULL
for(i in 1:length(b$breaks)){
mg[i] <- pnorm(b$breaks[i+1],mean(df),sd(df)) - pnorm(b$breaks[i],mean(df),sd(df))
e[i] <- length(a)*mg[i]
}
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
mg <- NULL
e<-NULL
for(i in 1:length(b$breaks)){
mg[i] <- pnorm(b$breaks[i+1],mean(df),sd(df)) - pnorm(b$breaks[i],mean(df),sd(df))
e[i] <- length(a)*mg[i]
d[i] <- (b$counts[i]-mg[i])^2/mg[i]
}
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
mg <- NULL
e<-NULL
d<-NULL
for(i in 1:length(b$breaks)){
mg[i] <- pnorm(b$breaks[i+1],mean(df),sd(df)) - pnorm(b$breaks[i],mean(df),sd(df))
e[i] <- length(a)*mg[i]
d[i] <- (b$counts[i]-mg[i])^2/mg[i]
}
b$counts
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
mg <- NULL
e<-NULL
d<-NULL
for(i in 1:length(b$breaks)){
mg[i] <- pnorm(b$breaks[i+1],mean(df),sd(df)) - pnorm(b$breaks[i],mean(df),sd(df))
e[i] <- length(a)*mg[i]
d[i] <- (b$counts[i]-mg[i])^2/mg[i]
}
sum(d)
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
mg <- NULL
e<-NULL
d<-NULL
sum=0
for(i in 1:length(b$breaks)){
mg[i] <- pnorm(b$breaks[i+1],mean(df),sd(df)) - pnorm(b$breaks[i],mean(df),sd(df))
e[i] <- length(a)*mg[i]
d[i] <- (b$counts[i]-mg[i])^2/mg[i]
sum = sum + d[i]
}
sum(d)
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
mg <- NULL
e<-NULL
d<-NULL
sum_d=0
for(i in 1:length(b$breaks)){
mg[i] <- pnorm(b$breaks[i+1],mean(df),sd(df)) - pnorm(b$breaks[i],mean(df),sd(df))
e[i] <- length(a)*mg[i]
d[i] <- (b$counts[i]-mg[i])^2/mg[i]
sum_d = sum_d + d[i]
}
print(sum_d)
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
mg <- NULL
e<-NULL
d<-NULL
sum_d <- 0
for(i in 1:length(b$breaks)){
mg[i] <- pnorm(b$breaks[i+1],mean(df),sd(df)) - pnorm(b$breaks[i],mean(df),sd(df))
e[i] <- length(a)*mg[i]
d[i] <- (b$counts[i]-mg[i])^2/mg[i]
sum_d = sum_d + d[i]
}
print(sum_d)
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
mg <- NULL
e<-NULL
d<-NULL
sum_d <- 0
for(i in 1:length(b$breaks-1)){
mg[i] <- pnorm(b$breaks[i+1],mean(df),sd(df)) - pnorm(b$breaks[i],mean(df),sd(df))
e[i] <- length(a)*mg[i]
d[i] <- (b$counts[i]-mg[i])^2/mg[i]
sum_d = sum_d + d[i]
}
print(sum_d)
print(e)
print(d)
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
mg <- NULL
e<-NULL
d<-NULL
sum_d <- 0
for(i in 1:length(b$breaks-2)){
mg[i] <- pnorm(b$breaks[i+1],mean(df),sd(df)) - pnorm(b$breaks[i],mean(df),sd(df))
e[i] <- length(a)*mg[i]
d[i] <- (b$counts[i]-mg[i])^2/mg[i]
sum_d = sum_d + d[i]
}
print(sum_d)
print(e)
print(d)
a <- read.table("d10.txt", header = FALSE)
b <- hist(a)
b$breaks
df =data.frame(a)$V1
m = mean(df)
s = sd(df)
mg <- NULL
e<-NULL
d<-NULL
sum_d <- 0
for(i in 1:length(b$breaks)){
mg[i] <- pnorm(b$breaks[i+1],mean(df),sd(df)) - pnorm(b$breaks[i],mean(df),sd(df))
e[i] <- length(a)*mg[i]
d[i] <- (b$counts[i]-mg[i])^2/mg[i]
sum_d = sum_d + d[i]
}
print(sum_d)
print(d)
print(d)
print(e)
shiny::runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
mat = matrix(c(2, 4, 6, 7), nrow = 2, dimnames = list(c("math", "science"), c("fail", "pass"))) ; fisher.test(mat, alternative = "greater") ;
mat = matrix(c(4,32,6,6,7,1,5,1,10,0,8,0), nrow = 6, dimnames = list(c("math", "science"), c("fail", "pass"))) ; fisher.test(mat, alternative = "greater") ;
mat = matrix(c(4,32,6,6,7,1,5,1,10,0,8,0), nrow = 6) ; fisher.test(mat, alternative = "greater") ;
mat = matrix(c(2, 4, 6, 7), nrow = 2, dimnames = list(c("math", "science"), c("fail", "pass"))) ; fisher.test(mat, alternative = "greater") ;
mat = matrix(c(20,28.33,20,28.33,20,28.33,40,28.33,40,28.33,30,28.33), nrow = 6) ; fisher.test(mat, alternative = "greater") ;
mat = matrix(c(10,15.833,5,15.833,10,15.833,20,15.833,30,15.833,20,15.833), nrow = 6) ; fisher.test(mat, alternative = "greater") ;
mat = matrix(c(10,20,5,20,10,20,20,40,30,40,20,30), nrow = 6) ; fisher.test(mat, alternative = "greater") ;
mat = matrix(c(10,20,5,20,10,20,20,40,30,40,20,30), nrow = 6) ; fisher.test(mat) ;
mat = matrix(c(2,3,2,3,3,3,4,3,4,3,3,3), nrow = 6) ; fisher.test(mat) ;
mat = matrix(c(1,2.33,2,2.33,2,2.33,3,2.33,3,2.33,3,2.33), nrow = 6) ; fisher.test(mat) ;
shiny::runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
install.packages("MEGENA")
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
install.packages("proxy")
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
install.packages("vegan")
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
install.packages("philentropy")
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
install.packages("minerva")
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
A <- matrix(runif(50),nrow=5)
mine(x=A, master=1)
mine(x=A, master=c(1,3,5,7,8:10))
x <- runif(10); y <- 3*x+2; plot(x,y,type="l")
mine(x,y)
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
a = as.data.frame(a)
a[1:3]
a[1:3,]
a = as.data.frame(iris.mis)
a[1:3,]
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
a=3
a
b=24
b
a = b*c/100
a
a=3
a = b*c/100
a
ab=3
ac=4
ad =ab*ac/100
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
shiny::runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
shiny::runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
shiny::runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
# load the rTRM package
library(rTRM)
# load network example.
load(system.file(package = "rTRM", "extra/example.rda"))
# plot network
install.packages("rTRM")
source("https://bioconductor.org/biocLite.R")
biocLite("rTRM")
# read motif enrichment results.
motif_file = system.file("extra/sox2_motif_list.rda", package = "rTRM")
load(motif_file)
length(motif_list)
head(motif_list)
# get the corresponding gene.
tfs_list = getOrthologFromMatrix(motif_list, organism = "mouse")
tfs_list = unique(unlist(tfs_list, use.names = FALSE))
length(tfs_list)
head(tfs_list)
# load expression data.
eg_esc_file = system.file("extra/ESC-expressed.txt", package = "rTRM")
eg_esc = scan(eg_esc_file, what = "")
length(eg_esc)
head(eg_esc)
tfs_list_esc = tfs_list[tfs_list %in% eg_esc]
length(tfs_list_esc)
head(tfs_list_esc)
require(npmlreg)
data(rainfall, package="forward")
rainfall$x<-rainfall$Rain/1000
rainfall$x2<- rainfall$x^2; rainfall$x3<- rainfall$x^3
rainfall
(toxo.np<- alldist(cbind(Cases,Total-Cases)~1, random=~1, data=rainfall, k=3, family=binomial(link=logit)))
(toxo.npx<- alldist(cbind(Cases,Total-Cases)~cbind(x,x2,x3), random=~1, data=rainfall, k=3, family=binomial(link=logit)))
round(t(toxo.np$post.prob),digits=2)
require(npmlreg)
data(rainfall, package="forward")
rainfall$x<-rainfall$Rain/1000
rainfall$x2<- rainfall$x^2; rainfall$x3<- rainfall$x^3
(toxo.np<- alldist(cbind(Cases,Total-Cases)~1, random=~1, data=rainfall, k=3, family=binomial(link=logit)))
toxo.np$disparity
(toxo.npx<- alldist(cbind(Cases,Total-Cases)~cbind(x,x2,x3), random=~1, data=rainfall, k=3, family=binomial(link=logit)))
(toxo.npxx<- alldist(cbind(Cases,Total-Cases)~x, random=~x, data=rainfall, k=3, family=binomial(link=logit)))
round(t(toxo.np$post.prob),digits=2)
require(npmlreg)
data(rainfall, package="forward")
rainfall$x<-rainfall$Rain/1000
rainfall$x2<- rainfall$x^2; rainfall$x3<- rainfall$x^3
(toxo.np<- alldist(cbind(Cases,Total-Cases)~1, random=~1, data=rainfall, k=3, family=binomial(link=logit)))
toxo.np$disparity
(toxo.npx<- alldist(cbind(Cases,Total-Cases)~cbind(x,x2,x3), random=~1, data=rainfall, k=3, family=binomial(link=logit)))
(toxo.npxx<- alldist(cbind(Cases,Total-Cases)~x, random=~x, data=rainfall, k=3, family=binomial(link=logit)))
require(npmlreg)
data(rainfall, package="forward")
rainfall$x<-rainfall$Rain/1000
rainfall$x2<- rainfall$x^2; rainfall$x3<- rainfall$x^3
(toxo.np<- alldist(cbind(Cases,Total-Cases)~1, random=~1, data=rainfall, k=3, family=binomial(link=logit)))
(toxo.npx<- alldist(cbind(Cases,Total-Cases)~cbind(x,x2,x3), random=~1, data=rainfall, k=3, family=binomial(link=logit)))
(toxo.npxx<- alldist(cbind(Cases,Total-Cases)~x, random=~x, data=rainfall, k=3, family=binomial(link=logit)))
round(t(toxo.np$post.prob),digits=2)
round(toxo.ebp<-toxo.np$ebp,digits=3)
predict(toxo.np, type="response")
fitted(toxo.np)
shiny::runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
shiny::runApp('Desktop/Semester 6/IP/GX_Analysis_Resources/gent')
library(devtools)
install_github("SAFE-ICU/GeneExpressionNetworkToolkit",dependencies=TRUE)
library(devtools)
install_github("SAFE-ICU/GeneExpressionNetworkToolkit",dependencies=TRUE)
library(devtools)
install_github("SAFE-ICU/GeneExpressionNetworkToolkit",dependencies=TRUE)
library(devtools)
install_github("SAFE-ICU/GeneExpressionNetworkToolkit",dependencies=TRUE)
library(GeneExpressionNetworkToolkit)
runApp(GX Analyst)
runApp("GX Analyst")
runApp("GeneExpressionNetworkToolkit")
library(devtools)
install_github("SAFE-ICU/GeneExpressionNetworkToolkit",dependencies=TRUE)
runApp("GeneExpressionNetworkToolkit")
setwd("~/Documents/GitHub")
runApp("GeneExpressionNetworkToolkit")
library(devtools)
install_github("SAFE-ICU/GeneExpressionNetworkToolkit",dependencies=TRUE)
library(Gene)
library(GeneExpressionNetworkToolkit)
launch_application(a)
library(devtools)
install_github("SAFE-ICU/GeneExpressionNetworkToolkit",dependencies=TRUE)
library(devtools)
install_github("SAFE-ICU/GeneExpressionNetworkToolkit",dependencies=TRUE)
library(devtools)
install_github("SAFE-ICU/GeneExpressionNetworkToolkit",dependencies=TRUE)
library(devtools)
install_github("SAFE-ICU/GeneExpressionNetworkToolkit",dependencies=TRUE)
library(devtools)
install_github("SAFE-ICU/GeneExpressionNetworkToolkit",dependencies=TRUE)
library(GeneExpressionNetworkToolkit)
launch_application()
library(devtools)
install_github("SAFE-ICU/GeneExpressionNetworkToolkit",dependencies=TRUE)
library(GeneExpressionNetworkToolkit)
launch_application()
library(devtools)
install_github("SAFE-ICU/GeneExpressionNetworkToolkit",dependencies=TRUE)
library(GeneExpressionNetworkToolkit)
launch_application()
GeneExpressionNetworkToolkit::launch_application()
library(devtools)
install_github("SAFE-ICU/GeneExpressionNetworkToolkit",dependencies=TRUE)
launch_application()
library(GeneExpressionNetworkToolkit)
GeneExpressionNetworkToolkit::launch_application()
library(devtools)
install_github("SAFE-ICU/GeneExpressionNetworkToolkit",dependencies=TRUE)
library(GeneExpressionNetworkToolkit)
GeneExpressionNetworkToolkit::launch
GeneExpressionNetworkToolkit::launch_application
GeneExpressionNetworkToolkit::launch_application()
setwd("~/Documents/GitHub/GeneExpressionNetworkToolkit")
devtools::document()
library(installr)
updateR()
install.packages("installr")
